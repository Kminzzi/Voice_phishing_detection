// Generated by view binder compiler. Do not edit!
package com.example.YourVoice.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.YourVoice.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMypageBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextView loginEmail;

  @NonNull
  public final TextView profileArea;

  @NonNull
  public final TextView profileEmail;

  @NonNull
  public final TextView profileNumber;

  @NonNull
  public final Toolbar toolbar;

  private FragmentMypageBinding(@NonNull CoordinatorLayout rootView, @NonNull TextView loginEmail,
      @NonNull TextView profileArea, @NonNull TextView profileEmail,
      @NonNull TextView profileNumber, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.loginEmail = loginEmail;
    this.profileArea = profileArea;
    this.profileEmail = profileEmail;
    this.profileNumber = profileNumber;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMypageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMypageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_mypage, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMypageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.login_email;
      TextView loginEmail = ViewBindings.findChildViewById(rootView, id);
      if (loginEmail == null) {
        break missingId;
      }

      id = R.id.profile_area;
      TextView profileArea = ViewBindings.findChildViewById(rootView, id);
      if (profileArea == null) {
        break missingId;
      }

      id = R.id.profile_email;
      TextView profileEmail = ViewBindings.findChildViewById(rootView, id);
      if (profileEmail == null) {
        break missingId;
      }

      id = R.id.profile_number;
      TextView profileNumber = ViewBindings.findChildViewById(rootView, id);
      if (profileNumber == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentMypageBinding((CoordinatorLayout) rootView, loginEmail, profileArea,
          profileEmail, profileNumber, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
